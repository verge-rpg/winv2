int gamemode;
int endgame;
int bombtime, time;
int row;

void ProcessGame()
{
 oxygen--;
 Switch(GetTile(entity.x[player]+8/16,entity.y[player]+8/16,7))
  {
   case 1:  oxygen+=50*60*10; score+=1000; ClearTile(); playsound(snd_jump3,64,128);
   case 2:  ammo+=25;         score+=500;  ClearTile(); playsound(snd_jump3,64,128);
   case 3:  if(!coolhelmet) oxygen-=19; 
   case 4:  if(coolkey)
            {
             SetTile(53,18,0,0);
             SetTile(53,19,0,0);
             SetTile(53,20,0,0);
             SetTile(53,18,1,0);
             SetTile(53,19,1,0);
             SetTile(53,20,1,0);
             coolkey=0; score+=1000;
             playsound(snd_jump3,64,128);
            }
   case 5:  if(coolbomb)
            {
             SetTile(28,42,0,116);
             bombtime=50*10;
             coolbomb=0;
            }
   case 6:  if (isotope[0])
            {
             SetTile(entity.x[player]+8/16,entity.y[player]+8/16,0,24);
             SetTile(entity.x[player]+8/16,entity.y[player]+8/16,7,0);
             endgame++;
             isotope[0]=0; score+=2000; playsound(snd_jump3,64,128);
            }
   case 7:  if (isotope[1])
            {
             SetTile(entity.x[player]+8/16,entity.y[player]+8/16,0,25);
             SetTile(entity.x[player]+8/16,entity.y[player]+8/16,7,0);
             endgame++;
             isotope[1]=0; score+=2000; playsound(snd_jump3,64,128);
            }
   case 8:  if (isotope[2])
            {
             SetTile(entity.x[player]+8/16,entity.y[player]+8/16,0,26);
             SetTile(entity.x[player]+8/16,entity.y[player]+8/16,7,0);
             endgame++;
             isotope[2]=0; score+=2000; playsound(snd_jump3,64,128);
            }
   case 9:  if (isotope[3])
            {
             SetTile(entity.x[player]+8/16,entity.y[player]+8/16,0,27);
             SetTile(entity.x[player]+8/16,entity.y[player]+8/16,7,0);
             endgame++;
             isotope[3]=0; score+=2000; playsound(snd_jump3,64,128);
            }
   case 10: isotope[0]=1; score+=1000; ClearTile(); playsound(snd_jump3,64,128);
   case 11: isotope[1]=1; score+=1000; ClearTile(); playsound(snd_jump3,64,128);
   case 12: isotope[2]=1; score+=1000; ClearTile(); playsound(snd_jump3,64,128);
   case 13: isotope[3]=1; score+=1000; ClearTile(); playsound(snd_jump3,64,128);
   case 14: coolshoes=1;  score+=1000; ClearTile(); playsound(snd_jump3,64,128);
   case 15: coolkey=1;    score+=1000; ClearTile(); playsound(snd_jump3,64,128);
   case 16: coolhelmet=1; score+=1000; ClearTile(); playsound(snd_jump3,64,128);
   case 17: coolbomb=1;   score+=1000; ClearTile(); playsound(snd_jump3,64,128);
   case 18: coolgun=1;    score+=1500; ClearTile(); playsound(snd_jump3,64,128);
  }
 if (bombtime)
  {
   bombtime--;
   if (!bombtime)
    {
     time=timer;
     while(timer<time+10) { PaletteMorph(63,63,63,100,63); ShowPage(); }
     PaletteMorph(0,0,0,0,63);
     ClearBedrock();
    }
  }
 if (endgame=4) gamemode=2;
 if (oxygen<=0) gamemode=1;
}

void ClearTile()
{
 SetTile(entity.x[player]+8/16,entity.y[player]+8/16,0,0);
 SetTile(entity.x[player]+8/16,entity.y[player]+8/16,7,0);
}

void ClearBedrock()
{
 int x,y;
 for (x=28; x<=33; x++)
  {
   for (y=38; y<=44; y++)
    {
     SetTile(x,y,0,0);
     SetTile(x,y,1,0);
    }
  }

}

void MainMenu()
{
 int done;
 time=timer;
 while (!done)
 {
 switch (gamemode)
 {
  case 0: xwin=0; HookRetrace(1);
  case 1: xwin=60*16; HookRetrace(3);
          coolshoes=0;
          coolgun=0;
          coolhelmet=0;
  case 2: xwin=34*16; HookRetrace(4);
  case 3: xwin=20*16; HookRetrace(2);
 }
  UpdateControls();
 while (!b1 && !b3 && !b4)
 {
  UpdateControls();
  row=200-(timer-time/4);
  if (row<0-160) row=0-160;
  Render();
  ShowPage();
 }
 if (b3) Exit("http://hello.to/the.prophet");
 Unpress(1); Unpress(4);
 if (gamemode=3) done=1;
 if (gamemode=0) gamemode=3;
 if (gamemode=1) gamemode=0;
 if (gamemode=2) gamemode=0;
 }
 HookRetrace(0);

}
